//
// Created by dsiedel on 01/07/2021.
//

#ifndef FETA_GAUSS_LINEAR_TRIANGLE_HXX
#define FETA_GAUSS_LINEAR_TRIANGLE_HXX

#include "feta/geometry/geometry.hxx"

namespace feta::geometry{

    struct LinearTriangle{
        static constexpr intg dim_element = 2;
        static constexpr intg dim_jacobian = 4;
        static constexpr intg num_nodes = 3;
    };

    template<intg k_quad>
    struct GaussLinearTriangle;

    template<>
    struct GaussLinearTriangle<1>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 1;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.3333333333333333, 0.3333333333333333, 0.3333333333333333
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                1.0000000000000000
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<2>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 3;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.1666666666666667, 0.1666666666666667, 0.6666666666666666,
                0.1666666666666667, 0.6666666666666666, 0.1666666666666667,
                0.6666666666666666, 0.1666666666666667, 0.1666666666666667
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                0.3333333333333333,
                0.3333333333333333,
                0.3333333333333333
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<3>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 4;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.3333333333333333, 0.3333333333333333, 0.3333333333333333,
                0.2000000000000000, 0.2000000000000000, 0.6000000000000000,
                0.2000000000000000, 0.6000000000000000, 0.2000000000000000,
                0.6000000000000000, 0.2000000000000000, 0.2000000000000000
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                -0.5625000000000000,
                0.5208333333333334,
                0.5208333333333334,
                0.5208333333333334
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<4>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 6;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.4459484909159649, 0.4459484909159649, 0.1081030181680702,
                0.0915762135097707, 0.0915762135097707, 0.8168475729804585,
                0.4459484909159649, 0.1081030181680702, 0.4459484909159649,
                0.0915762135097707, 0.8168475729804585, 0.0915762135097707,
                0.1081030181680702, 0.4459484909159649, 0.4459484909159649,
                0.8168475729804585, 0.0915762135097707, 0.0915762135097707
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                0.2233815896780116,
                0.1099517436553219,
                0.2233815896780116,
                0.1099517436553219,
                0.2233815896780116,
                0.1099517436553219
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<5>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 7;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.3333333333333333, 0.3333333333333333, 0.3333333333333333,
                0.4701420641051151, 0.4701420641051151, 0.0597158717897699,
                0.1012865073234563, 0.1012865073234563, 0.7974269853530873,
                0.4701420641051151, 0.0597158717897699, 0.4701420641051151,
                0.1012865073234563, 0.7974269853530873, 0.1012865073234563,
                0.0597158717897699, 0.4701420641051151, 0.4701420641051151,
                0.7974269853530873, 0.1012865073234563, 0.1012865073234563
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                0.2250000000000001,
                0.1323941527885062,
                0.1259391805448272,
                0.1323941527885062,
                0.1259391805448272,
                0.1323941527885062,
                0.1259391805448272
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<6>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 12;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.2492867451709104, 0.2492867451709104, 0.5014265096581791,
                0.0630890144915023, 0.0630890144915023, 0.8738219710169954,
                0.2492867451709104, 0.5014265096581791, 0.2492867451709104,
                0.0630890144915023, 0.8738219710169954, 0.0630890144915023,
                0.5014265096581791, 0.2492867451709104, 0.2492867451709104,
                0.8738219710169954, 0.0630890144915023, 0.0630890144915023,
                0.0531450498448170, 0.3103524510337844, 0.6365024991213987,
                0.6365024991213987, 0.0531450498448170, 0.3103524510337844,
                0.3103524510337844, 0.6365024991213987, 0.0531450498448170,
                0.3103524510337844, 0.0531450498448170, 0.6365024991213987,
                0.6365024991213987, 0.3103524510337844, 0.0531450498448170,
                0.0531450498448170, 0.6365024991213987, 0.3103524510337844
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                0.1167862757263794,
                0.0508449063702069,
                0.1167862757263794,
                0.0508449063702069,
                0.1167862757263794,
                0.0508449063702069,
                0.0828510756183736,
                0.0828510756183736,
                0.0828510756183736,
                0.0828510756183736,
                0.0828510756183736,
                0.0828510756183736
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<7>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 13;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.3333333333333333, 0.3333333333333333, 0.3333333333333333,
                0.2603459660790399, 0.2603459660790399, 0.4793080678419203,
                0.0651301029022158, 0.0651301029022158, 0.8697397941955683,
                0.2603459660790399, 0.4793080678419203, 0.2603459660790399,
                0.0651301029022158, 0.8697397941955683, 0.0651301029022158,
                0.4793080678419203, 0.2603459660790399, 0.2603459660790399,
                0.8697397941955683, 0.0651301029022158, 0.0651301029022158,
                0.0486903154253164, 0.3128654960048739, 0.6384441885698097,
                0.6384441885698097, 0.0486903154253164, 0.3128654960048739,
                0.3128654960048739, 0.6384441885698097, 0.0486903154253164,
                0.3128654960048739, 0.0486903154253164, 0.6384441885698097,
                0.6384441885698097, 0.3128654960048739, 0.0486903154253164,
                0.0486903154253164, 0.6384441885698097, 0.3128654960048739
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                -0.1495700444676822,
                0.1756152574332078,
                0.0533472356088384,
                0.1756152574332078,
                0.0533472356088384,
                0.1756152574332078,
                0.0533472356088384,
                0.0771137608902571,
                0.0771137608902571,
                0.0771137608902571,
                0.0771137608902571,
                0.0771137608902571,
                0.0771137608902571
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
    template<>
    struct GaussLinearTriangle<8>{
        using Ref = LinearTriangle;
        static constexpr intg dim_quadrature = 16;
        static constexpr std::array<real, Ref::num_nodes * dim_quadrature> points = {
                0.3333333333333333, 0.3333333333333333, 0.3333333333333333,
                0.4592925882927232, 0.4592925882927232, 0.0814148234145536,
                0.1705693077517603, 0.1705693077517603, 0.6588613844964795,
                0.0505472283170311, 0.0505472283170311, 0.8989055433659379,
                0.4592925882927232, 0.0814148234145536, 0.4592925882927232,
                0.1705693077517603, 0.6588613844964795, 0.1705693077517603,
                0.0505472283170311, 0.8989055433659379, 0.0505472283170311,
                0.0814148234145536, 0.4592925882927232, 0.4592925882927232,
                0.6588613844964795, 0.1705693077517603, 0.1705693077517603,
                0.8989055433659379, 0.0505472283170311, 0.0505472283170311,
                0.0083947774099577, 0.2631128296346381, 0.7284923929554042,
                0.7284923929554042, 0.0083947774099577, 0.2631128296346381,
                0.2631128296346381, 0.7284923929554042, 0.0083947774099577,
                0.2631128296346381, 0.0083947774099577, 0.7284923929554042,
                0.7284923929554042, 0.2631128296346381, 0.0083947774099577,
                0.0083947774099577, 0.7284923929554042, 0.2631128296346381
        };
        static constexpr std::array<real, dim_quadrature> weights = {
                0.1443156076777871,
                0.0950916342672846,
                0.1032173705347181,
                0.0324584976231981,
                0.0950916342672846,
                0.1032173705347181,
                0.0324584976231981,
                0.0950916342672846,
                0.1032173705347181,
                0.0324584976231981,
                0.0272303141744350,
                0.0272303141744350,
                0.0272303141744350,
                0.0272303141744350,
                0.0272303141744350,
                0.0272303141744350
        };
        static constexpr std::array<std::array< real, Ref::num_nodes * Ref::dim_jacobian>, dim_quadrature> jacobians = {
                {
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        },
                        {
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476,
                                -0.7071067811865476, 0.7071067811865476, 0.0000000000000000,
                                -0.7071067811865476, 0.0000000000000000, 0.7071067811865476
                        }
                }
        };
    };
}

#endif //FETA_GAUSS_LINEAR_TRIANGLE_HXX
